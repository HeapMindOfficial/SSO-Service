// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String              @id @default(uuid())
  email        String              @unique
  password     String
  name         String
  createdAt    DateTime            @default(now())
  updatedAt    DateTime            @updatedAt
  authCodes    AuthorizationCode[]
  accessTokens AccessToken[]
}

model OAuth2Client {
  id           String              @id @default(uuid())
  clientId     String              @unique
  clientSecret String
  name         String
  redirectUris String[]
  grantTypes   String[]
  scopes       String[]
  createdAt    DateTime            @default(now())
  updatedAt    DateTime            @updatedAt
  authCodes    AuthorizationCode[]
  accessTokens AccessToken[]
}

model AuthorizationCode {
  id          String       @id @default(uuid())
  code        String       @unique
  clientId    String
  userId      String
  scopes      String[]
  redirectUri String
  expiresAt   DateTime
  createdAt   DateTime     @default(now())
  client      OAuth2Client @relation(fields: [clientId], references: [id])
  user        User         @relation(fields: [userId], references: [id])
}

model AccessToken {
  id        String       @id @default(uuid())
  token     String       @unique
  clientId  String
  userId    String?
  scopes    String[]
  expiresAt DateTime
  createdAt DateTime     @default(now())
  client    OAuth2Client @relation(fields: [clientId], references: [id])
  user      User?        @relation(fields: [userId], references: [id])
}
